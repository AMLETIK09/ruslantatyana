// --- –§–ê–ô–õ script.js (–ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø) ---

document.addEventListener('DOMContentLoaded', () => {

    // --- –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è –±–ª–æ–∫–æ–≤ –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ ---
    const animatedElements = document.querySelectorAll('.fade-in-up');

    if ("IntersectionObserver" in window) {
        const observer = new IntersectionObserver((entries, observer) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.classList.add('is-visible');
                    observer.unobserve(entry.target);
                }
            });
        }, {
            rootMargin: '0px 0px -100px 0px'
        });

        animatedElements.forEach(el => {
            observer.observe(el);
        });
    } else {
        animatedElements.forEach(el => {
            el.classList.add('is-visible');
        });
    }

    // --- –¢–∞–π–º–µ—Ä –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –æ—Ç—Å—á–µ—Ç–∞ ---
    const weddingDate = new Date('2025-10-09T12:30:00').getTime();
    const countdownElement = document.getElementById("countdown");

    function updateCountdown() {
        const now = new Date().getTime();
        const diff = weddingDate - now;
        if (!countdownElement) return;
        if (diff <= 0) {
            countdownElement.innerHTML = `<div class="wedding-message"><h3>üéâ –°–≤–∞–¥—å–±–∞ —É–∂–µ —Å–æ—Å—Ç–æ—è–ª–∞—Å—å!</h3><p>–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –±—ã–ª–∏ —Å –Ω–∞–º–∏ –≤ —ç—Ç–æ—Ç –≤–∞–∂–Ω—ã–π –¥–µ–Ω—å!</p></div>`;
            return;
        }
        const days = Math.floor(diff / (1000 * 60 * 60 * 24));
        const hours = Math.floor((diff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
        const minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));
        const seconds = Math.floor((diff % (1000 * 60)) / 1000);
        document.getElementById("days").textContent = String(days).padStart(2, "0");
        document.getElementById("hours").textContent = String(hours).padStart(2, "0");
        document.getElementById("minutes").textContent = String(minutes).padStart(2, "0");
        document.getElementById("seconds").textContent = String(seconds).padStart(2, "0");
    }

    if (countdownElement) {
        setInterval(updateCountdown, 1000);
        updateCountdown();
    }

    // --- –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã RSVP –≤ Telegram ---
    const rsvpForm = document.getElementById('rsvp-form');
    if (rsvpForm) {
        rsvpForm.addEventListener('submit', async function (e) {
            e.preventDefault();
            const form = e.target;
            const data = new FormData(form);
            const name = data.get('name');
            const attendance = data.get('attendance');
            const guests = data.get('guests') || '1';
            const comment = data.get('comment') || '–ù–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è';
            const statusMessage = document.getElementById('status-message');
            statusMessage.innerText = "–û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö...";
            statusMessage.style.color = "#555";
            const message = `üéâ –ù–æ–≤–∞—è RSVP –∑–∞—è–≤–∫–∞:\n\nüë§ –ò–º—è: ${name}\n‚úÖ –ü—Ä–∏–¥—ë—Ç: ${attendance}\nüë• –ì–æ—Å—Ç–µ–π: ${guests}\nüí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: ${comment}`;
            const telegramBotToken = "8340050283:AAF13cSArr0IJ6Ye39vP0oA-mYbTIWp0ouA";
            const chatId = "-1002943340156";
            try {
                const response = await fetch(`https://api.telegram.org/bot${telegramBotToken}/sendMessage`, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({
                        chat_id: chatId,
                        text: message
                    })
                });
                if (response.ok) {
                    statusMessage.innerText = "–°–ø–∞—Å–∏–±–æ! –í–∞—à –æ—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω üíå";
                    statusMessage.style.color = "green";
                    form.reset();
                } else {
                    const errorData = await response.json();
                    throw new Error(errorData.description || '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞');
                }
            } catch (error) {
                console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:', error);
                statusMessage.innerText = "–û—à–∏–±–∫–∞: " + (error.message || "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ");
                statusMessage.style.color = "red";
            }
        });
    }
    
    // --- –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ ---
    function getNameFromURL() {
        const params = new URLSearchParams(window.location.search);
        return params.get("name");
    }
    const guestName = getNameFromURL();
    const greetingElement = document.getElementById("greeting");
    if (guestName && greetingElement) {
        greetingElement.innerText = `–î–æ—Ä–æ–≥–∞—è, ${decodeURIComponent(guestName)}!`;
    }

    // --- –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–æ–Ω–æ–≤–æ–π –º—É–∑—ã–∫–æ–π ---
    const audio = document.getElementById('background-music');
    const toggleBtn = document.getElementById('music-toggle');
    const volumeSlider = document.getElementById('volume-slider');

    if (audio && toggleBtn && volumeSlider) {
        audio.volume = 0.5;
        toggleBtn.addEventListener('click', () => {
            if (audio.paused) {
                audio.play().catch(e => console.log("–û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è:", e));
            } else {
                audio.pause();
            }
        });
        audio.onplay = () => {
            toggleBtn.style.color = '#fff';
            toggleBtn.innerHTML = '‚ô´';
        };
        audio.onpause = () => {
            toggleBtn.style.color = '#ccc';
            toggleBtn.innerHTML = '‚ô™';
        };
        volumeSlider.addEventListener('input', () => {
            audio.volume = volumeSlider.value;
        });
        const startMusic = () => {
            audio.play().catch(() => {});
            document.body.removeEventListener('click', startMusic);
            document.body.removeEventListener('touchstart', startMusic);
        };
        document.body.addEventListener('click', startMusic);
        document.body.addEventListener('touchstart', startMusic);
    }

});


